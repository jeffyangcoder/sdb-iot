<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdb.iot.driverManager.mapper.sdbIotDriverAttributeMapper">
    
    <resultMap type="sdbIotDriverAttribute" id="sdbIotDriverAttributeResult">
        <result property="id"    column="id"    />
        <result property="driverId"    column="driver_id"    />
        <result property="name"    column="name"    />
        <result property="property"    column="property"    />
        <result property="type"    column="type"    />
        <result property="def"    column="def"    />
        <result property="remark"    column="remark"    />
        <result property="createTime"    column="create_time"    />
        <result property="modifyTime"    column="modify_time"    />
    </resultMap>

    <resultMap id="sdbIotDriverAttributesdbIotDriverResult" type="sdbIotDriverAttribute" extends="sdbIotDriverAttributeResult">
        <collection property="sdbIotDriverList" notNullColumn="sub_id" javaType="java.util.List" resultMap="sdbIotDriverResult" />
    </resultMap>

    <resultMap type="sdbIotDriver" id="sdbIotDriverResult">
        <result property="id"    column="sub_id"    />
        <result property="name"    column="sub_name"    />
        <result property="server"    column="sub_server"    />
        <result property="enable"    column="sub_enable"    />
        <result property="host"    column="sub_host"    />
        <result property="port"    column="sub_port"    />
        <result property="remark"    column="sub_remark"    />
        <result property="modifyDate"    column="sub_modify_date"    />
        <result property="createDate"    column="sub_create_date"    />
    </resultMap>

    <sql id="selectsdbIotDriverAttributeVo">
        select id, driver_id, name, property, type, def, remark, create_time, modify_time from sdb_iot_driver_attribute
    </sql>

    <select id="selectsdbIotDriverAttributeList" parameterType="sdbIotDriverAttribute" resultMap="sdbIotDriverAttributeResult">
        <include refid="selectsdbIotDriverAttributeVo"/>
        <where>  
            <if test="driverId != null "> and driver_id = #{driverId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="property != null  and property != ''"> and property = #{property}</if>
        </where>
    </select>
    
    <select id="selectsdbIotDriverAttributeById" parameterType="Long" resultMap="sdbIotDriverAttributesdbIotDriverResult">
        select a.id, a.driver_id, a.name, a.property, a.type, a.def, a.remark, a.create_time, a.modify_time,
            b.id as sub_id, b.name as sub_name, b.server as sub_server, b.enable as sub_enable, b.host as sub_host, b.port as sub_port, b.remark as sub_remark, b.modify_date as sub_modify_date, b.create_date as sub_create_date
        from sdb_iot_driver_attribute a
        left join sdb_iot_driver b on b.id = a.id
        where a.id = #{id}
    </select>
        
    <insert id="insertsdbIotDriverAttribute" parameterType="sdbIotDriverAttribute" useGeneratedKeys="true" keyProperty="id">
        insert into sdb_iot_driver_attribute
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="driverId != null">driver_id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="property != null and property != ''">property,</if>
            <if test="type != null and type != ''">type,</if>
            <if test="def != null and def != ''">def,</if>
            <if test="remark != null">remark,</if>
            <if test="createTime != null">create_time,</if>
            <if test="modifyTime != null">modify_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="driverId != null">#{driverId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="property != null and property != ''">#{property},</if>
            <if test="type != null and type != ''">#{type},</if>
            <if test="def != null and def != ''">#{def},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="modifyTime != null">#{modifyTime},</if>
         </trim>
    </insert>

    <update id="updatesdbIotDriverAttribute" parameterType="sdbIotDriverAttribute">
        update sdb_iot_driver_attribute
        <trim prefix="SET" suffixOverrides=",">
            <if test="driverId != null">driver_id = #{driverId},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="property != null and property != ''">property = #{property},</if>
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="def != null and def != ''">def = #{def},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="modifyTime != null">modify_time = #{modifyTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletesdbIotDriverAttributeById" parameterType="Long">
        delete from sdb_iot_driver_attribute where id = #{id}
    </delete>

    <delete id="deletesdbIotDriverAttributeByIds" parameterType="String">
        delete from sdb_iot_driver_attribute where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deletesdbIotDriverByIds" parameterType="String">
        delete from sdb_iot_driver where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deletesdbIotDriverById" parameterType="Long">
        delete from sdb_iot_driver where id = #{id}
    </delete>

    <insert id="batchsdbIotDriver">
        insert into sdb_iot_driver( id, name, server, enable, host, port, remark, modify_date, create_date) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.name}, #{item.server}, #{item.enable}, #{item.host}, #{item.port}, #{item.remark}, #{item.modifyDate}, #{item.createDate})
        </foreach>
    </insert>
</mapper>